name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-22.04 # Use a specific stable version of Ubuntu

    steps:
      # Step 1: Check out the code from the repository
      - name: Check out the code
        uses: actions/checkout@v4
        # This step checks out the code from the repository so that we can work with it

      # Step 2: Set up Docker Buildx, which is required for advanced Docker builds
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        # This step sets up Docker Buildx to support advanced Docker builds

      # Step 3: Log in to Docker Hub using credentials stored in GitHub Secrets
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
        # This step logs in to Docker Hub to allow pushing images to your repository

      - name: Build and Push backend Docker image
        env:
          REPOSITORY: backendshoplanding
          IMAGE_TAG: latest
        run: |

          # Build the Docker image for the backend service
          cd backend
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/$REPOSITORY:$IMAGE_TAG .
          if [ $? -ne 0 ]; then
            echo "Backend Docker image build failed"
            exit 1
          fi
          # Push the backend Docker image to Docker Hub
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/$REPOSITORY:$IMAGE_TAG
          if [ $? -ne 0 ]; then
            echo "Backend Docker image push failed"
            exit 1
          fi
        # This step builds the Docker image for the backend service and pushes it to Docker Hub

      # Step 6: Build and push the frontend Docker image
      - name: Build and Push frontend Docker image
        env:
          REPOSITORY: frontendshoplanding
          IMAGE_TAG: latest
        run: |
          # Build the Docker image for the frontend service
          cd frontend
          docker build  -t ${{ secrets.DOCKERHUB_USERNAME }}/$REPOSITORY:$IMAGE_TAG . 
          if [ $? -ne 0 ]; then
            echo "Frontend Docker image build failed"
            exit 1
          fi
          # Push the frontend Docker image to Docker Hub
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/$REPOSITORY:$IMAGE_TAG
          if [ $? -ne 0 ]; then
            echo "Frontend Docker image push failed"
            exit 1
          fi
        # This step builds the Docker image for the frontend service and pushes it to Docker Hub

#  backendshoplanding
#  frontendshoplanding
